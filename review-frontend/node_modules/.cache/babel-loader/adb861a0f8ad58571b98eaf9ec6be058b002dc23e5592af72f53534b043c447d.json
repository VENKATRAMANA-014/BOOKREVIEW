{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SONTE BHARATH KUMAR\\\\Desktop\\\\BookReview\\\\review-frontend\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\n// src/context/UserContext.js\nimport React, { createContext, useEffect, useState } from 'react';\nimport API from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      API.get('/users/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => setUser(res.data)).catch(() => {\n        localStorage.removeItem('token');\n        setUser(null);\n      }).finally(() => setLoading(false));\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","API","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","get","headers","Authorization","then","res","data","catch","removeItem","finally","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SONTE BHARATH KUMAR/Desktop/BookReview/review-frontend/src/context/UserContext.js"],"sourcesContent":["// src/context/UserContext.js\r\nimport React, { createContext, useEffect, useState } from 'react'\r\nimport API from '../api/api'\r\n\r\nexport const UserContext = createContext()\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      API.get('/users/me', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n        .then((res) => setUser(res.data))\r\n        .catch(() => {\r\n          localStorage.removeItem('token')\r\n          setUser(null)\r\n        })\r\n        .finally(() => setLoading(false))\r\n    } else {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser, loading }}>\r\n      {!loading && children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTX,GAAG,CAACc,GAAG,CAAC,WAAW,EAAE;QACnBC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUL,KAAK;QAAG;MAC9C,CAAC,CAAC,CACCM,IAAI,CAAEC,GAAG,IAAKV,OAAO,CAACU,GAAG,CAACC,IAAI,CAAC,CAAC,CAChCC,KAAK,CAAC,MAAM;QACXR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;QAChCb,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,CAAC,CACDc,OAAO,CAAC,MAAMZ,UAAU,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEC,OAAO;MAAEC;IAAQ,CAAE;IAAAJ,QAAA,EACrD,CAACI,OAAO,IAAIJ;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAAtB,EAAA,CA1BYF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}